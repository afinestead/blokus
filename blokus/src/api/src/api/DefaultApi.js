/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BodyPlacePiecePlacePut from '../model/BodyPlacePiecePlacePut';
import HTTPValidationError from '../model/HTTPValidationError';


export default class DefaultApi {

    
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    getPiecesPiecesGetWithHttpInfo(degree) {
      let postBody = null;
      // verify the required parameter 'degree' is set
      if (degree === undefined || degree === null) {
        throw new Error("Missing the required parameter 'degree' when calling getPiecesPiecesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'degree': degree
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/pieces', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    getPiecesPiecesGet(degree) {
      return this.getPiecesPiecesGetWithHttpInfo(degree)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
    placePiecePlacePutWithHttpInfo(bodyPlacePiecePlacePut) {
      let postBody = bodyPlacePiecePlacePut;
      // verify the required parameter 'bodyPlacePiecePlacePut' is set
      if (bodyPlacePiecePlacePut === undefined || bodyPlacePiecePlacePut === null) {
        throw new Error("Missing the required parameter 'bodyPlacePiecePlacePut' when calling placePiecePlacePut");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/place', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    placePiecePlacePut(bodyPlacePiecePlacePut) {
      return this.placePiecePlacePutWithHttpInfo(bodyPlacePiecePlacePut)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
    rootGetWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    rootGet() {
      return this.rootGetWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
    startGameStartPostWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    startGameStartPost() {
      return this.startGameStartPostWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
